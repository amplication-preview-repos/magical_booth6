/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Infographic as PrismaInfographic } from "@prisma/client";

export class InfographicServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InfographicCountArgs, "select">
  ): Promise<number> {
    return this.prisma.infographic.count(args);
  }

  async infographics(
    args: Prisma.InfographicFindManyArgs
  ): Promise<PrismaInfographic[]> {
    return this.prisma.infographic.findMany(args);
  }
  async infographic(
    args: Prisma.InfographicFindUniqueArgs
  ): Promise<PrismaInfographic | null> {
    return this.prisma.infographic.findUnique(args);
  }
  async createInfographic(
    args: Prisma.InfographicCreateArgs
  ): Promise<PrismaInfographic> {
    return this.prisma.infographic.create(args);
  }
  async updateInfographic(
    args: Prisma.InfographicUpdateArgs
  ): Promise<PrismaInfographic> {
    return this.prisma.infographic.update(args);
  }
  async deleteInfographic(
    args: Prisma.InfographicDeleteArgs
  ): Promise<PrismaInfographic> {
    return this.prisma.infographic.delete(args);
  }
}
